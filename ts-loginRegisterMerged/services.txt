所有服务:

    sso: ts-sso-service （db）    --- jc  
    登录: ts-login-service        --- jc  
    注册: ts-register-service     --- jc 
    验证码: ts-verificationCode-service    --- xcj

    常用联系人管理(CRUD): ts-contacts-service （db）     --- jc 

    配置: ts-config-service (db: 10天以后，同一id同一车次1，改签次数，定价，预订溢出比（100%），改签费用规则)  --- xcj
    定票价: ts-price-service (db: distance)  --- xcj

    车站站名服务：ts-station-service（db: 车站表）      --- xcj
    车服务： ts-train-service (db: train)               --- xcj

    车次查询_高铁动车: ts-travel-service (db: 车次表（max ticket）)      --- xcj 
    车次查询_其他(k...): ts-travel2-service                            --- xcj 

    车票预订_高铁动车：ts-preserve-service           --- jc 
    车票预订_其他: ts-preserve-service              --- jc 

    车票订单_高铁动车(CRUD): ts-order-service (cancel, modify, rebook, query)   --- jc 
        status: 
            未支付: 预订未支付，修改(座位等级修改，删除...), 取消(退票)
            已支付：预定已支付，已支付改签，取消
    车票订单_其他(k...):                                                       --- jc

    站内支付： ts-insite-payment （db）        --- xcj 
    车票支付(CRUD，退款): ts-payment-service （中转）  --- xcj 

    车票使用终端服务(车票进站): ts-execute-service （中转） --- jc 

    黄牛：ts-security-service (账户同一天1小时内没有订单或预定，不能超过5张)    --- jc 

    消息通知微服务：ts-notification-service     --- xcj 
    （todo: 取票）

    基础信息：ts-basic-service （查询接口）                --- xcj  

    车票关联信息：ts-ticketinfo-service （查询接口）        --- xcj  

    改签： ts-rebook-service (改签)




页面：

    登陆验证：inputbox ＋ button ＋ output
    车次查询： inputbox ＋ button ＋ output

    10.141.212.21 server: apache + proxy
    config Reverse Proxy:
    ProxyPass /account/ http://10.141.212.21:12300/
    ProxyPassReverse /account/ http://10.141.212.21:12300/


关键流程:

    1. 登陆验证 －》 车次查询 －》 车票预订 －》 修改座位等级 －》 支付 －》 乘车
    2. 登陆验证 －》 车次查询 －》 车票预订 －》 支付 －》 改签 －》 支付 －》 乘车
    3. 登陆验证 －》 车票订单查询 －》 取消 －》 退款

关键操作(流程1)：
    登陆验证： 登陆 －》 验证码（sso） －》  
    车次查询： 车次查询_高铁动车（sso） －》 车站站名服务 －》 配置 －》 车服务 －》 车票订单_高铁动车（已购票数）
    车票预订: 车票预订_高铁动车(sso) －》 联系人 －》 配置 －》 车服务 －》 车票订单_高铁动车（已购票数）－》黄牛
    修改座位等级：车票预订_高铁动车(sso) －》配置 －》 车服务 －》 车票订单_高铁动车（已购票数）
    支付操作： 车票订单_高铁动车（sso）－》 联系人 －》 配置 －》 车服务 －》 车票订单_高铁动车（已购票数）－》黄牛 －》 站内支付 －》 车票支付 －》 第三方支付或银行
    乘车： 车票使用终端服务 －》 车票订单_高铁动车

关键操作(流程2)：
    改签： 车票订单_高铁动车（sso）－》 
            －》 车票预订_高铁动车(sso) －》 联系人 －》 配置 －》 车服务 －》 车票订单_高铁动车（已购票数）－》黄牛
            －》 车票订单_高铁动车（sso）－》 联系人 －》 配置 －》 车服务 －》 车票订单_高铁动车（已购票数）－》黄牛 －》 站内支付（差额支付或差额退款） －》 配置 －》 车票支付（差额支付或差额退款） －》 配置 －》 第三方支付或银行

关键依赖：
    配置， 车站站名服务， 车服务， 联系人， 验证码， sso， 定票价
    基础信息，登陆， 注册， 消息通知微服务、
    车票关联信息，车票订单，
    车次查询，站内支付，车票支付， 车票使用终端服务,黄牛，
    车票预订，车票改签
    
    



Service API:

    登录微服务(account-login-service)
        (1)Login
            Path:   http://account-login-service:12342/login
            Method: Post - LoginInfo.java: A class that save the required login information.
                                String phoneNum: Login By Phone Number.
                                String password: Password of the account.
                    Example:{"password":"jichaofudan","phoneNum":"352323"}
            Return: null for account-not-found & wrong-password, Account.java for login success.
                    Example:{"id":"c5e84370-484e-4d16-9490-71627540f752","password":"","gender":3,
                             "name":"AfterChangeInfo","documentType":0,"documentNum":"0123456789","phoneNum":"352323"}

    注册微服务(account-register-service)
        (1)Register
            Path:   http://account-register-service:12344/register
            Method: Post - RegisterInfo.java: A class that save the required register information.
                                String password
                                int gender
                                String name
                                 int documentType
                                String documentNum
                                String phoneNum
                    Example:{"password":"defaultPassword","gender":3,"documentType":0,"name":"testUUID",
                             "documentNum":"0123456789","phoneNum":"352323"}
            Return: null for phone-number-already-exist, Account.java for register success.
                    Example: {"id":"c5e84370-484e-4d16-9490-71627540f752","password":"","gender":3,
                              "name":"AfterChangeInfo","documentType":0,"documentNum":"0123456789","phoneNum":"352323"}

    账号信息管理(account-manage-service)
         (1)Modify Information
                    Path: http://account-manage-service:12343/saveAccountInfo
                    Method: PUT - Account.java
                            Example: {"id":"c5e84370-484e-4d16-9490-71627540f752","password":"","gender":3,
                                      "name":"AfterChangeInfo","documentType":0,"documentNum":"0123456789",
                                      "phoneNum":"352323"}
                    Return: null for account-not-found, Account.java for success.
                            Example: {"id":"c5e84370-484e-4d16-9490-71627540f752","password":"","gender":3,
                                      "name":"AfterChangeInfo","documentType":0,"documentNum":"0123456789","phoneNum":"352323"}
         (2)Modify Password
                 Path: http://account-manage-service:12343/changePassword
                 Method: PUT - NewPasswordInfo.java
                                   UUID id: The account Id you will change.
                                   String oldPassword: The old password of the account.
                                   String newPassword: The new password of the account.
                         Example:{"oldPassword":"defaultPassword","newPassword":"jichaofudan",
                                  "id":"c5e84370-484e-4d16-9490-71627540f752"}
                 Return: null for account-not-found & wrong-password, Account.java for success.

         (3)Find a account
                 Path: http://account-manage-service:12343/findAccount/{phoneNum}
                 Method: Get
                 Return: null for account-not-found, Account.java for finding success.

    联系人增加和删除微服务(contacts-addanddelete-service)
         (1)Add new contacts
                    Path: http://contacts-addanddelete-service:12345/createNewContacts
                    Method: Post - AddContactsInfo.java
                                       UUID accountId: This contact belongs to which account
                                       String name: The name of the contact
                                       int documentType
                                       String documentNumber
                                       String phoneNumber
                            Example:{"accountId":"c5e84370-484e-4d16-9490-71627540f752","phoneNumber":"+86 15221870263",
                                     "documentType":1,"documentNumber":"142603199601311011","name":"冀超"}
                    Return: null for contact already exists, Contact.java for success
                            Example:{"id":"d3ed5f2f-c702-4cdd-834f-22732639ba87",
                                     "accountId":"c5e84370-484e-4d16-9490-71627540f752","name":"冀超","documentType":1,
                                     "documentNumber":"142603199601311011","phoneNumber":"+86 15221870263"}
         (2)Delete a contact
                    Path:http://contacts-addanddelete-service:12345/deleteContacts
                    Method: Post - String of contactsId.
                            Example: contactsId=0586a017-c395-44ae-86b2-87ecb80734af
                    Return: delete status string.
                            Example: "status=success" "status=fail"

    联系人修改微服务(contacts-modify-service)
        (1)Modify A Contact
                    Path: http://contacts-modify-service:12346/saveContactsInfo
                    Method: Put - Contact.java
                    Return: null for contact-not-found, Contact.java for modify success.

    联系人查询微服务(contacts-query-service)
        (1)Query one's contacts
                    Path: http://contacts-query-service:12347/findContacts/{accountIdStr}
                    Method: Get
                    Return: ArrayList<Contacts>
                            Example:[{"id":"d3ed5f2f-c702-4cdd-834f-22732639ba87",
                                      "accountId":"c5e84370-484e-4d16-9490-71627540f752","name":"冀超","documentType":1,
                                      "documentNumber":"142603199601311011","phoneNumber":"+86 15221870263"}]

    订单创建微服务(order-create-service)
        (1)Create New Orders.
                    Path: http://order-create-service:12031/createNewOrders
                    Method: POST - Order.java
                            Example:{"boughtDate":"2017-04-20T16:50:06.330+0800","travelDate":"2017-04-20T16:50:06.330+0800",
                                     "accountId":"c5e84370-484e-4d16-9490-71627540f752","trainNumber":{"type":0,"number":2001},
                                     "coachNumber":5,"seatClass":2,"seatNumber":{"position":"A","lineNum":5,"seatNumber":0,
                                     "isNormalSeat":false},"from":"上海虹桥","to":"南京南","status":1}
                    Return: Order.java you created.
                            Example:{"id":"81ce4669-a0e1-47b0-942d-99a5ee99f64f","boughtDate":1492678206330,
                                     "travelDate":1492678206330,"accountId":"c5e84370-484e-4d16-9490-71627540f752",
                                     "trainNumber":{"type":0,"number":2001},"coachNumber":5,"seatClass":2,
                                     "seatNumber":{"position":"A","lineNum":5,"seatNumber":0,"normalSeat":false},
                                     "from":"上海虹桥","to":"南京南","status":1}

    订单信息修改微服务(order-modify-service)
        (1)Modify A Order Information
                    Path: http://order-modify-service:12030/saveOrderInfo
                    Method: POST - Order.java
                    Return: null for order-not-found, Order.java for success.

    订单取消微服务(order-cancel-service)
        (1)Cancel An Order
                    Path: http://order-cancel-service:12033/cancelOrder
                    Method: POST - CancelOrderInfo.java
                                       UUID accountId: The owner of the order.
                                       UUID orderId: The order that will be canceled.
                            Example:{"accountId":"c5e84370-484e-4d16-9490-71627540f752",
                                     "orderId":"0bff8e54-26fc-4f4c-ad89-c45e9ec5a3d1"}
                    Return: null for order-not-found, Order.java for success.

    订单改签微服务(order-rebook-service)
            (1)Rebook an order
                    Path: http://order-alter-service:12032/alterOrder
                    Method: POST - OrderAlterInfo
                                        UUID accountId
                                        UUID previousOrderId: The order that will be canceled.
                                        Order newOrderInfo: The order will be created after the previous order canceled.
                            Example:{"accountId":"c5e84370-484e-4d16-9490-71627540f752",
                                     "previousOrderId":"0bff8e54-26fc-4f4c-ad89-c45e9ec5a3d1",
                                     "newOrderInfo":{"boughtDate":"2017-04-20T17:33:24.550+0800",
                                     "travelDate":"2017-04-20T17:33:24.550+0800",
                                     "accountId":"c5e84370-484e-4d16-9490-71627540f752",
                                     "trainNumber":{"type":0,"number":2001},"coachNumber":5,
                                     "seatClass":2,"seatNumber":{"position":"A","lineNum":5,
                                     "seatNumber":0,"isNormalSeat":false},"from":"上海虹桥",
                                     "to":"南京南","status":1}}
                    Return: null for old-order-not-found, Order.java for success.

    订单查询微服务(order-query-service)
            (1)Query An Order
                    Path: http://order-query-service:14221/queryOrders
                    Method: POST - QueryInfo.java
                                        UUID accountId: The owner of the orders
                                        Date travelDateStart: Travel date from
                                        Date travelDateEnd: Travel date to
                                        Date boughtDateStart: Bought date from
                                        Date boughtDateEnd: Bought date to
                                        int state: Which state of orders do you want.
                                        boolean enableTravelDateQuery: use travel date search or not
                                        boolean enableBoughtDateQuery: use bought date search or not
                                        boolean enableStateQuery: use state search or not
                            Example:{"accountId":"c5e84370-484e-4d16-9490-71627540f752","state":-1,
                                     "enableTravelDateQuery":false,"enableBoughtDateQuery":false,"enableStateQuery":false}
                    Return: ArrayList of the orders.
                            Example:[{"id":"0bff8e54-26fc-4f4c-ad89-c45e9ec5a3d1","boughtDate":1491446284477,
                                      "travelDate":1491446284481,"accountId":"c5e84370-484e-4d16-9490-71627540f752",
                                      "trainNumber":{"type":0,"number":2001},"coachNumber":5,"seatClass":2,
                                      "seatNumber":{"position":"A","lineNum":5,"seatNumber":0,"normalSeat":false},
                                      "from":"上海虹桥","to":"南京南","status":4},
                                      {"id":"81ce4669-a0e1-47b0-942d-99a5ee99f64f","boughtDate":1492678206330,
                                      "travelDate":1492678206330,"accountId":"c5e84370-484e-4d16-9490-71627540f752",
                                      "trainNumber":{"type":0,"number":2001},"coachNumber":5,"seatClass":2,
                                      "seatNumber":{"position":"A","lineNum":5,"seatNumber":0,"normalSeat":false},
                                      "from":"上海虹桥","to":"南京南","status":1}]

    payment-service
            (1)pay
                    Path: http://pay
                    always return true
                    query in json:
                    {"money":324.50}

    query_crh-service
            (1)query the tickets for China Railway HighSpeed
                    Path: http://querycrh
                    return the information about the ticket,include:id,trainNumber,departureStation,arrivalStation,departureTime,
                    arrivalTime,starting and destination.the query should include three information:starting,destination and date.
                    query in json:
                    {"starting":上海,"destination":"太原","date":"2017-03-21T21:47:04.432+0800"}
                    ps: date formate:"yyyy-MM-dd'T'HH:mm:ss.SSSZ"
                    return json:
                    [{"id":"58d12e5f88d07cbbc7a8eda0","trainNumber":"G1952","departureStation":"上海虹桥","arrivalStation":"太原??","departureTime":1490107254000,"arrivalTime":1490154023000,"destination":"太原","starting":"上海"},
                    {"id":"58d12e9188d07cbbc7a8eda1","trainNumber":"G1952","departureStation":"上海虹桥","arrivalStation":"太原??","departureTime":1490107254000,"arrivalTime":1490240423000,"destination":"太原","starting":"上海"}]


    queryordinary-service
            (1)query the tickets for ordinary train
                    Path: http://queryordinary
                    return the information about the ticket,include:id,trainNumber,departureStation,arrivalStation,departureTime,
                    arrivalTime,starting and destination.the query should include three information:starting,destination and date.
                    query in json:
                    {"starting":上海,"destination":"太原","date":"2017-03-21T21:47:04.432+0800"}
                    ps: date formate:"yyyy-MM-dd'T'HH:mm:ss.SSSZ"
                    return json:
                    [{"id":"58d12e5f88d07cbbc7a8eda0","trainNumber":"Z268","departureStation":"上海","arrivalStation":"太原南","departureTime":1490107254000,"arrivalTime":1490154023000,"destination":"太原","starting":"上海"},
                    {"id":"58d12e9188d07cbbc7a8eda1","trainNumber":"Z196","departureStation":"上海","arrivalStation":"太原","departureTime":1490107254000,"arrivalTime":1490240423000,"destination":"太原","starting":"上海"}]

    verificationCode-service
            (1)return an image which contains verification code,like:
               2468,which is an image
                    Path: http://verificationCode



