version: '3'
services:


  rabbitmq:
    image: rabbitmq:management
    ports:
      - 5672:5672
      - 15672:15672
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  # kafka:
  #   container_name: kafka
  #   image: spotify/kafka:latest
  #   ports:
  #    - 2181:2181
  #    - 9092:9092
  #   networks:
  #     - my-network

  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  redis:
    image: redis
    ports:
      - 6379:6379
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network
  

  ts-ui-dashboard:
    build: ts-ui-dashboard
    image: ts/ts-ui-dashboard
    restart: always
    ports:
      - 80:8080
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-login-service:
    build: ts-login-service
    image: ts/ts-login-service
    restart: always
    ports:
      - 12342:12342
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-account-mongo:
    image: mongo
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-register-service:
    build: ts-register-service
    image: ts/ts-register-service
    restart: always
    ports:
      - 12344:12344
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network


  ts-sso-service:
    build: ts-sso-service
    image: ts/ts-sso-service
    restart: always
    ports:
      - 12349:12349
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network



  ts-verification-code-service:
    build: ts-verification-code-service
    image: ts/ts-verification-code-service
    restart: always
    ports:
      - 15678:15678
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-contacts-service:
    build: ts-contacts-service
    image: ts/ts-contacts-service
    restart: always
    ports:
      - 12347:12347
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-contacts-mongo:
      image: mongo
      deploy:
        replicas: 1
        restart_policy:
          condition: on-failure
      networks:
        - my-network

  ts-order-service:
    build: ts-order-service
    image: ts/ts-order-service
    restart: always
    ports:
      - 12031:12031
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-order-mongo:
    image: mongo
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network


  ts-order-other-service:
    build: ts-order-other-service
    image: ts/ts-order-other-service
    restart: always
    ports:
      - 12032:12032
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-order-other-mongo:
    image: mongo
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network


  ts-config-service:
    build: ts-config-service
    image: ts/ts-config-service
    restart: always
    ports:
      - 15679:15679
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-config-mongo:
    image: mongo
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-station-service:
    build: ts-station-service
    image: ts/ts-station-service
    restart: always
    ports:
      - 12345:12345
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-station-mongo:
    image: mongo
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-train-service:
    build: ts-train-service
    image: ts/ts-train-service
    restart: always
    ports:
      - 14567:14567
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-train-mongo:
    image: mongo
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-travel-service:
    build: ts-travel-service
    image: ts/ts-travel-service
    restart: always
    ports:
      - 12346:12346
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-travel-mongo:
    image: mongo
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-travel2-service:
      build: ts-travel2-service
      image: ts/ts-travel2-service
      restart: always
      ports:
        - 16346:16346
      deploy:
        replicas: 3
        restart_policy:
          condition: on-failure
      networks:
        - my-network

  ts-travel2-mongo:
      image: mongo
      deploy:
        replicas: 1
        restart_policy:
          condition: on-failure
      networks:
        - my-network

  ts-preserve-service:
    build: ts-preserve-service
    image: ts/ts-preserve-service
    restart: always
    ports:
      - 14568:14568
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network

  ts-preserve-other-service:
    build: ts-preserve-other-service
    image: ts/ts-preserve-other-service
    restart: always
    ports:
      - 14569:14569
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - my-network


  ts-basic-service:
      build: ts-basic-service
      image: ts/ts-basic-service
      restart: always
      ports:
        - 15680:15680
      deploy:
        replicas: 3
        restart_policy:
          condition: on-failure
      networks:
          - my-network

  ts-ticketinfo-service:
        build: ts-ticketinfo-service
        image: ts/ts-ticketinfo-service
        restart: always
        ports:
          - 15681:15681
        deploy:
          replicas: 3
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-price-service:
        build: ts-price-service
        image: ts/ts-price-service
        restart: always
        ports:
          - 16579:16579
        deploy:
          replicas: 3
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-price-mongo:
        image: mongo
        deploy:
          replicas: 1
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-notification-service:
        build: ts-notification-service
        image: ts/ts-notification-service
        restart: always
        ports:
          - 17853:17853
        deploy:
          replicas: 3
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-security-service:
        build: ts-security-service
        image: ts/ts-security-service
        restart: always
        ports:
          - 11188:11188
        deploy:
          replicas: 3
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-security-mongo:
        image: mongo
        deploy:
          replicas: 1
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-inside-payment-service:
        build: ts-inside-payment-service
        image: ts/ts-inside-payment-service
        restart: always
        ports:
          - 18673:18673
        deploy:
          replicas: 3
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-inside-payment-mongo:
        image: mongo
        deploy:
          replicas: 1
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-execute-service:
        build: ts-execute-service
        image: ts/ts-execute-service
        restart: always
        ports:
          - 12386:12386
        deploy:
          replicas: 3
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-payment-service:
        build: ts-payment-service
        image: ts/ts-payment-service
        restart: always
        ports:
          - 19001:19001
        deploy:
          replicas: 3
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-payment-mongo:
        image: mongo
        deploy:
          replicas: 1
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-rebook-service:
        build: ts-rebook-service
        image: ts/ts-rebook-service
        restart: always
        ports:
          - 18886:18886
        deploy:
          replicas: 3
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-rebook-mongo:
        image: mongo
        deploy:
          replicas: 1
          restart_policy:
            condition: on-failure
        networks:
          - my-network

  ts-cancel-service:
        build: ts-cancel-service
        image: ts/ts-cancel-service
        restart: always
        ports:
          - 18885:18885
        deploy:
          replicas: 3
          restart_policy:
            condition: on-failure
        networks:
          - my-network


networks:
  my-network:
    # driver: overlay
    driver: bridge





